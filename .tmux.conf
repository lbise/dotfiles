###############################################################################
# Leo's tmux configuration
###############################################################################
set -g default-terminal "xterm-256color"        # Change default terminal
# Terminal color
set -ga terminal-overrides ",*256col*:Tc"
#set -ga terminal-overrides ",*256col*:Tc,xterm*:smcup@:rmcup@"
set-window-option -g mode-keys vi               # Enable vi mode
set-option -g history-limit 50000               # Increase history size
set-option -g prefix C-Space	                # Change prefix
set -sg escape-time 10                          # No delay on escape
setw -g mouse on				                # Enable mouse
set -g set-clipboard on			                # Enable OSC52 clipboard
set -g renumber-windows on                      # renumber windows when a window is closed
setw -g automatic-rename on                     # rename window to reflect current program
set -g base-index 1                             # start windows numbering at 1
setw -g pane-base-index 1                       # make pane numbering consistent with windows

###############################################################################
# Key bindings
###############################################################################
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'" # VIM detection

#*******************************************************************************
# Mouse
#*******************************************************************************
 # If the mouse option is on (the default is off), tmux allows mouse events to be bound as keys.
 # The name of each key is made up of a mouse event (such as ‘MouseUp1’) and a location
 # suffix, one of the following:
 #       Pane             the contents of a pane
 #       Border           a pane border
 #       Status           the status line window list
 #       StatusLeft       the left part of the status line
 #       StatusRight      the right part of the status line
 #       StatusDefault    any other part of the status line
 # The following mouse events are available:
 #       WheelUp       WheelDown
 #       MouseDown1    MouseUp1      MouseDrag1   MouseDragEnd1
 #       MouseDown2    MouseUp2      MouseDrag2   MouseDragEnd2
 #       MouseDown3    MouseUp3      MouseDrag3   MouseDragEnd3
 #       SecondClick1  SecondClick2  SecondClick3
 #       DoubleClick1  DoubleClick2  DoubleClick3
 #       TripleClick1  TripleClick2  TripleClick3

unbind -n MouseDown3Pane			# Disable right click menu
#unbind -n MouseDown1Pane
#bind -T root MouseDown1Pane send-keys -M MouseDown1
#unbind -n MouseDown2Pane
#bind -T root MouseDown2Pane send-keys -M MouseDown2
#
#unbind -n MouseDown1Status
#bind -T root MouseDown1Status send-keys -M MouseDown1
##unbind -n MouseDown2Pane
#unbind -n MouseDown3Status
#unbind -n MouseDown3StatusLeft
#unbind -n MouseDrag1Pane
#bind -T root MouseDrag1Pane send-keys -M MouseDrag1
#unbind -n MouseDrag1Border
#bind -T root MouseDrag1Border send-keys -M MouseDrag1
#unbind -n WheelUpPane
#bind -T root WheelUpPane send-keys -M WheelUp
#unbind -n WheelUpStatus
#bind -T root WheelUpStatus send-keys -M WheelUp
#unbind -n WheelDownStatus
#bind -T root WheelDownStatus send-keys -M WheelDown
#unbind -n DoubleClick1Pane
#bind -T root DoubleClick1Pane send-keys -M DoubleClick1
#unbind -n TripleClick1Pane
#bind -T root TripleClick1Pane send-keys -M TripleClick1

#*******************************************************************************
# Keyboard
#*******************************************************************************
# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf
bind-key -n Home send Escape "OH"		# Needed when using xterm
bind-key -n End send Escape "OF"		# Needed when using xterm
bind -n Pageup if-shell "$is_vim" "send-keys Pageup" "copy-mode -u" # Pageup to copy mode
bind-key x kill-pane                            # No confirmation when closing panes
bind-key q kill-pane                            # No confirmation when closing panes
bind e split-window -v -c "#{pane_current_path}" # Create vertical pane
bind w split-window -h -c "#{pane_current_path}" # Create horizontal pane
# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R
bind-key -r f run-shell "tmux neww ~/.scripts/tmux-sessionizer" # Start sessionizer

###############################################################################
# Theme
###############################################################################
run-shell "~/.tmux/themes/nord-tmux/nord.tmux"
